
<%- include("../layouts/adminProductHeader.ejs")%>


<nav class="navbar navbar-expand-lg navbar-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <img src="/assets/images/logo/logo_black.png" alt="SwiftCart" style="width: 120px;">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link active" href="/admin/dashboard">Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link " href="/admin/product">Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link "  href="/admin/categories">Categories</a>
            </li>
            <li class="nav-item">
                <a class="nav-link " href="/admin/brands">Brands</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/userManagement">Users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/orders">Orders</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/coupons">Coupons</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/offers">Offers</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/banner">Banner</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" onclick="message(successMessage='Logout Successfully')" href="/admin/logout">Log Out</a>
            </li>
        </ul>
    </div>
</div>
</nav>    

    <div class="content bg-light">
        <h1 class="text-primary mb-4">Dashboard</h1>

        <div class="row">
            <div class="col-md-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-success">Sales Overview</h5>
                        <div class="d-flex justify-content-between mb-3">
                            <div class="text-center">
                                <h6 class="text-muted">Total Sales Count</h6>
                                <h4 id="ts" class="text-primary" id="j"></h4>
                            </div>
                            <div class="text-center">
                                <h6 class="text-muted">Total Revenue</h6>
                                <h4 id="tr" class="text-primary">₹<%= totalRevenue%></h4>
                            </div>
                            <div class="text-center">
                                <h6 class="text-muted">Total Discount</h6>
                                <h4 id="td" class="text-primary">₹</h4>
                            </div>
                        </div>
                        <canvas id="revenueChart" height="200"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-info">Most Sold Items</h5>
                        <% topProducts.forEach(product => { %>
                            <div class="progress mt-2" style="height: 25px;">
                                <div class="progress-bar bg-success" role="progressbar" style="width: <%= product.percentage %>%;">
                                    <%= product.name %> - <%= product.percentage %>%
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-warning">Best Selling Products</h5>
                        <ol class="list-group list-group-numbered">
                            <% bestSellingProducts.forEach(product => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= product.name %></div>
                                    </div>
                                    <span class="badge bg-primary rounded-pill">Sold: <%= product.totalSold %></span>
                                </li>
                            <% }); %>
                        </ol>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-danger">Best Selling Categories</h5>
                        <ol class="list-group list-group-numbered">
                            <% bestSellingCategories.forEach(category => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= category.name %></div>
                                    </div>
                                    <span class="badge bg-success rounded-pill">Sold: <%= category.totalSold %></span>
                                </li>
                            <% }); %>
                        </ol>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-info">Best Selling Brands</h5>
                        <ol class="list-group list-group-numbered">
                            <% bestSellingBrands.forEach(brand => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div class="ms-2 me-auto">
                                        <div class="fw-bold"><%= brand.name %></div>
                                    </div>
                                    <span class="badge bg-warning text-dark rounded-pill">Sold: <%= brand.totalSold %></span>
                                </li>
                            <% }); %>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title text-primary">Sales Report</h5>
                <form id="salesReportForm" class="row g-3">
                    <div class="col-md-3">
                        <select class="form-select" id="reportType">
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                            <option value="custom">Custom Date Range</option>
                        </select>
                    </div>
                    <div class="col-md-3" id="customDateRange" style="display: none;">
                        <input type="date" class="form-control" id="startDate">
                    </div>
                    <div class="col-md-3" id="customDateRange2" style="display: none;">
                        <input type="date" class="form-control" id="endDate">
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary">Generate Report</button>
                    </div>
                </form>
                <div id="reportResults" class="mt-4"></div>
                <div class="mt-3" id="downloadButtons" style="display: none;">
                    <button id="downloadExcel" class="btn btn-success">Download Report (Excel)</button>
                    <button id="downloadPdf" class="btn btn-danger">Download Report (PDF)</button>
                </div>
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title text-success">Recent Sales</h5>
                <table class="table table-hover">
                    <thead class="table-primary">
                        <tr>
                            <th>#</th>
                            <th>Customer ID</th>
                            <th>Customer Name</th>
                            <th>Item Name</th>
                            <th>Order Date</th>
                            <th>Status</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% recentSales.forEach((sale, index) => { %>
                            <tr>
                                <td id="sl-no"><%= index + 1 %></td>
                                <td>#<%= sale.userId || 'N/A' %></td>
                                <td><%= sale.customerName || 'Unknown' %></td>
                                <td><%= sale.itemName || 'N/A' %></td>
                                <td><%= sale.orderDate ? sale.orderDate.toLocaleString() : 'N/A' %></td>
                                <td><span class="badge bg-<%= getStatusColor(sale.status) %>"><%= sale.status || 'N/A' %></span></td>
                                <td>₹<%= (sale.price || 0).toFixed(2) %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
        
        
        
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    


    <script>

       var ctx = document.getElementById('revenueChart').getContext('2d');
        var revenueChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [], // Initial labels
                datasets: [{
                    label: 'Revenue',
                    data: [], // Initial data
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });






        function updateChart(labels, data) {
            revenueChart.data.labels = labels;
            revenueChart.data.datasets[0].data = data;
            revenueChart.update();
        }

        $('#reportType').change(function() {
        const reportType = $(this).val();
        let labels = [];
        let data = [];

        if (reportType === 'weekly') {
            labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
            data = [500, 700, 400, 800, 900, 600, 1000]; 
        } else if (reportType === 'monthly') {
            labels = ['Week 1', 'Week 2', 'Week 3', 'Week 4','Week 5','Week 6','Week 7'];
            data = [2000, 3000, 2500, 4000]; // Example monthly data
        } else if (reportType === 'yearly') {
            labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            data = [12000, 15000, 13000, 18000, 21000, 17000, 16000, 20000, 22000, 25000, 27000, 30000]; // Example yearly data
        }

        updateChart(labels, data);
    });
    
    function message(successMessage){
        if(successMessage){

        
            Swal.fire({
                position: "center",
                icon: "success",
                title: successMessage,
                showConfirmButton: false,
                timer: 3000
            }).then(() => {
                window.location.href = "/admin"; // Redirect to remove query parameters
            });
        }
    }

     






    let currentReportData = null;
        $(document).ready(function() {
            $('#reportType').change(function() {
                if ($(this).val() === 'custom') {
                    $('#customDateRange, #customDateRange2').show();
                } else {
                    $('#customDateRange, #customDateRange2').hide();
                }
            });

            $('#salesReportForm').submit(function(e) {
            e.preventDefault();
            const reportType = $('#reportType').val();
            const startDate = $('#startDate').val();
            const endDate = $('#endDate').val();

            $.ajax({
                url: '/admin/generate-sales-report',
                method: 'POST',
                data: { reportType, startDate, endDate },
                success: function(response) {
                    $('#reportResults').html(response.html);
                    currentReportData = response.data;
                    $('#downloadButtons').show();
                    
                    // Update the chart with the new sales data
                    updateChart(response.labels, response.salesData);


                    // Update total revenue
                    $('.card-body #tr').text('₹' + response.totalRevenue);
                    $('.card-body #ts').text('₹' + response.totalSales);
                    $('.card-body #td').text('₹' + response.totalDiscount);
                },
                error: function(error) {
                    console.error('Error generating report:', error);
                    $('#downloadButtons').hide();
                }
            });
        });

        function updateChart(labels, data) {
            revenueChart.data.labels = labels;
            revenueChart.data.datasets[0].data = data;
            revenueChart.update();
        }


        });

        $('#downloadExcel').click(function() {
            
    if (currentReportData) {
        var wb = XLSX.utils.book_new();
        var ws = XLSX.utils.json_to_sheet(currentReportData.map(item => ({
            'Order ID': item.orderId,
            'Customer Name': item.customer,
            'Total Amount': '₹' + parseFloat(item.totalAmount).toFixed(2),
            'Date': item.date,
            'Status': "Delivered",
            'Payment Method': item.paymentMethod,
            'Coupon Discount': '₹' + parseFloat(item.couponDiscount).toFixed(2),
            'Offer Discount': '₹' + parseFloat(item.offerDiscount).toFixed(2),
            'Items': item.items.map(i => `${i.name} (x${i.quantity})`).join(', ')
        })));


        const totalSales = currentReportData.length;
        const totalRevenue = currentReportData.reduce((sum, item) => sum + parseFloat(item.totalAmount), 0);
        const totalCouponDiscount = currentReportData.reduce((sum, item) => sum + parseFloat(item.couponDiscount), 0);
        const totalOfferDiscount = currentReportData.reduce((sum, item) => sum + parseFloat(item.offerDiscount), 0);

        // Add summary data to sheet
        const summaryRowIndex = currentReportData.length + 2; // Adjust row index after the data rows
        XLSX.utils.sheet_add_aoa(ws, [
            [''],
            [''],
            ['Sales Report'],
            [''],
            ['Generated on: ' + new Date().toLocaleString()],
            ['Total Sales', totalSales],
            ['Total Revenue', '₹' + totalRevenue.toFixed(2)],
            ['Total Coupon Discount', '₹' + totalCouponDiscount.toFixed(2)],
            ['Total Offer Discount', '₹' + totalOfferDiscount.toFixed(2)]
        ], {origin: `A${summaryRowIndex}`});


        XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
        XLSX.writeFile(wb, "sales_report.xlsx");
    } else {
        console.error('No report data available');
    }
});




$('#downloadPdf').click(function() {
    if (currentReportData) {
        var doc = new jspdf.jsPDF();
        
        doc.setFontSize(18);
        doc.text('Sales Report', 14, 22);
        doc.setFontSize(12);
        doc.text('Generated on: ' + new Date().toLocaleString(), 14, 32);
        

        const totalSales = currentReportData.length;
        const totalRevenue = currentReportData.reduce((sum, item) => sum + parseFloat(item.totalAmount), 0);
        const totalCouponDiscount = currentReportData.reduce((sum, item) => sum + parseFloat(item.couponDiscount), 0);
        const totalOfferDiscount = currentReportData.reduce((sum, item) => sum + parseFloat(item.offerDiscount), 0);
        
        doc.text(`Total Sales: ${totalSales}`, 14, 42);
        doc.text(`Total Revenue: Rs.${totalRevenue.toFixed(2)}`, 14, 52);
        doc.text(`Total Coupon Discount: Rs.${totalCouponDiscount.toFixed(2)}`, 14, 62);
        doc.text(`Total Offer Discount: Rs.${totalOfferDiscount.toFixed(2)}`, 14, 72);
        
        doc.autoTable({
            startY: 82,
            head: [['Order ID', 'Customer', 'Total Amount', 'Date', 'Status', 'Payment Method', 'Items']],
            body: currentReportData.map(item => [
                item.orderId,
                item.customer,
                'Rs.' + parseFloat(item.totalAmount).toFixed(2),
                item.date,
                "Delivered",
                item.paymentMethod,
                item.items.map(i => `${i.name} (x${i.quantity})`).join(', ')
            ])
        });
        
        doc.save("sales_report.pdf");
    } else {
        console.error('No report data available');
    }
});

 
</script>

<script>
    const sidebarToggle = document.getElementById('sidebarToggle');
const sidebar = document.getElementById('sidebar');
const content = document.querySelector('.content');

if (sidebarToggle && sidebar && content) {
    sidebarToggle.addEventListener('click', function() {
        sidebar.classList.toggle('active');
        content.style.marginLeft = sidebar.classList.contains('active') ? '200px' : '0';
    });

    // Adjust layout on window resize
    window.addEventListener('resize', function() {
        if (window.innerWidth > 990) {
            sidebar.classList.add('active');
            content.style.marginLeft = '200px';
        } else {
            sidebar.classList.remove('active');
            content.style.marginLeft = '0';
        }
    });

    // Initial layout adjustment
    if (window.innerWidth > 990) {
        sidebar.classList.add('active');
        content.style.marginLeft = '200px';
    }
}
</script>


<%-include("../layouts/footer.ejs")%>






